#!/bin/sh

##########################
# SMesh Configuration File
##########################

# LOG is /dev/null or filename (i.e. /tmp/log).
# MULTILOG (0 or 1) to keep only the last few minutes of logs, in several files.
LOG=/dev/null
MULTILOG=0


# MESH Wireless Interface Name, WAN/Internet Interface Name,
# and port number for overlay network
MESHIF=eth1
WANIF=vlan1
SMESH_PORT=8120


# Take snapshot of client connections every 20 seconds?
# "-log path/file_name"  OR ""
SMESH_SNAPSHOT=""


# SMesh DHCP (0 or 1) will make SMesh service clients
# SMesh IGW (0 or 1) makes this node a SMesh Internet Gateway
SMESH_DHCP=1
SMESH_IGW=0


# KERNEL=0 for Overlay Mode 
# KERNEL=1 for Kernel routing data packets through shortest path
# KERNEL=2 for Kernel routing data packets through mcast path 
KERNEL=1


# Specify static mesh neighbors as: -a ip -a ip
# For autodiscovery, use -d mcast_ip, e.g., -d 225.7.7.7
# Can combine autodiscovery with static neighbors 
# If using autodiscovery, you should enable MONIF and MIN_LINK_RSSI below
NEIGHBORS=""


# Wireless Monitoring Mode
# Allows SMesh to assess the quality of links, based on signal strenght and
# plausible loss-rate (looking at rssi and retx flag).  This information is 
# available in monitoring interfaces. In WRT54, the interface name is prism0.  
# If defining a monitoring interface in an atheros based card, configure 
# monitoring to use prism2 headers. 
MONIF=""


# When auto-discovering other mesh nodes in the wireless network, we want
# to enable links that are likely to have good connectivity.  The signal
# strength is a pretty good indicator of quality in most circumstances.  Our
# values are scaled from actual measurement to a percentage.  We use a threshold
# of 28 when in 802.11g (24Mbps), and 35 when in 802.11b (11Mbps). You may look
# at spines.snapshot in each node to see the signal strength value for every 
# neighbor from each node point of view. You should not set a value below 10, as
# you may enable the network to consider pretty bad links in the mesh.  
# IMPORTANT: You need to install libpcap, and have a softlink from libpcap.so
# For example: "ln -s /usr/lib/libpcap.so.0.9.4 /usr/lib/libpcap.so"
# Leave blank if you do not have libpcap shared library
# This option requires a MONIF, and autodiscovery
# MIN_LINK_RSSI=35
MIN_LINK_RSSI=""


# Type of client metrics desired [dhcp, arp, barp, rssi, rssi_s]
# "-m metric -m metric" 
# We recommend arp plus rssi, but rssi requires a MONIF
# METRIC="-m arp -m rssi"
METRIC="-m arp"


# DMZ client ip for automatic dnat of unbinded incomming traffic
# i.e. DMZ="10.2.4.6"
DMZ=""


# Enable Hybrid mode when having multiple internet gateways. 
# Currently works ONLY with overlay mode. 
# A more limitted Hybrid mode is partially supported in kernel mode 
# but GRE tunnels should be setup between Internet gateways. We expect to
# setup/configure/manage the GRE tunnels automatically from SMesh in
# the near future.  
HYBRID=0


# Specify Hybrid Internet Gateway neighbors when having
# disconnected islands that will not autodiscover each other.
# Use only when HYBRID is enabled.
HYBRID_NEIGHBORS=""


# Overlay Firewall for Wan/Internet Access: -fw firewall_file 
# Only the internet gateway needs to know about this file
# If empty, every address is allowed.  The file format is 
# just a bunch of IPs (dotted format) separated by newlines.
# Mesh nodes should also be added if you want them to have access
FIREWALL="" 


# Will enable flushing iptables including nat table
# If disabled, SMesh may not work (depends on your policies).
FLUSH_IPTABLES=1


# Mesh Gatewy Remote Login Parameters
# SSH Daemon full path (i.e. sshd or dropbear) and 
# remote port (must be rarely used or unassigned port)
SSHD=/usr/sbin/dropbear
SSHD_PORT=722


# Some SMesh specifics. Read paper for details.
UCAST_HELLO=3
BCAST_HELLO=3
LQMAX=20
THRESHOLD=0.2
DECAYFACTOR=0.2


# Directories of binaries 
SPINES=/jffs/spines
SMESH_PROXY=/jffs/smesh_proxy
IPTABLES=/usr/sbin/iptables
IFCONFIG=/sbin/ifconfig
IP=/usr/sbin/ip


# Other stuff
DEBUG=0
MEMLIMIT=6


#RECOMMENDED SETTINGS FOR FAST-HANODFF
#MONIF="prism0"
#METRIC="-m arp -m rssi"
#UCAST_HELLO=2
#BCAST_HELLO=2
#THRESHOLD=0.15



# Take several values from NVRAM instead
# Very useful on embedded devices like WRT54G

#KERNEL=`/usr/sbin/nvram get smesh_kernel`
#HYBRID=`/usr/sbin/nvram get smesh_hybrid`
#NEIGHBORS=`/usr/sbin/nvram get smesh_neighbors`
#SMESH_DHCP=`/usr/sbin/nvram get smesh_dhcp`
#BCAST_HELLO=`/usr/sbin/nvram get smesh_bh`
#UCAST_HELLO=`/usr/sbin/nvram get smesh_uh`
#LQMAX=`/usr/sbin/nvram get smesh_lqmax`
#THRESHOLD=`/usr/sbin/nvram get smesh_ts`
#METRIC=`/usr/sbin/nvram get smesh_metric`
#MONIF=`/usr/sbin/nvram get smesh_monif`


